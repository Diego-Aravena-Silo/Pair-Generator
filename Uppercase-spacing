import vanilla

class SpacingPairs:

    def __init__(self):
        self.windowWidth = 333
        self.windowHeight = 100
        self.windowWidthResize = 100  # user can resize width by this value
        self.windowHeightResize = 100  # user can resize height by this value

        self.w = vanilla.FloatingWindow(
            (self.windowWidth, self.windowHeight),  # default window size
            "Pairs Generator",  # window title
            minSize=(self.windowWidth, self.windowHeight),  # minimum size
            maxSize=(self.windowWidth + self.windowWidthResize, self.windowHeight + self.windowHeightResize),  # maximum size
        )

        # UI elements:
        self.w.uppercase = vanilla.CheckBox(
            (15, 15, 75, 22), "Uppercase", sizeStyle="small", callback=self.checkbox_callback
        )
        self.w.lowercase = vanilla.CheckBox(
            (100, 15, 75, 22), "Lowercase", sizeStyle="small", callback=self.checkbox_callback
        )
        self.w.number = vanilla.CheckBox(
            (185, 15, 75, 22), "Number", sizeStyle="small", callback=self.checkbox_callback
        )
        self.w.currency = vanilla.CheckBox(
            (253, 15, 75, 22), "Currency", sizeStyle="small", callback=self.checkbox_callback
        )
        self.w.pairsButton = vanilla.Button(
            (10, 50, -10, 22), "Generate Pairs", sizeStyle="regular", callback=self.button_callback
        )

        self.w.open()  # Open the window
        self.w.makeKey()  # Focus on window

    def checkbox_callback(self, sender):
        # This function can be used to handle checkbox state changes if needed
        pass

    def button_callback(self, sender):
        # This method is called when the button is pressed.
        if self.w.uppercase.get():
            self.uppercase_spacing()
        if self.w.lowercase.get():
            self.lowercase_spacing()
        if self.w.number.get():
            self.figure_spacing()

    def uppercase_spacing(self):
        # List of uppercase characters
        uppercase = [chr(i) for i in range(65, 91)]

        # Concatenate all results into a single string
        result_string = "\n".join(["HH" + character + "HH"+ " " "OO" + character + "OO" for character in uppercase])

        Font.newTab(result_string)

    def lowercase_spacing(self):
        # List of lowercase characters
        lowercase = [chr(i) for i in range(97, 123)]

        # Concatenate all results into a single string
        result_string = "\n".join(["nn" + character + "nn"+ " " "oo" + character + "oo" for character in lowercase])

        Font.newTab(result_string)

    def figure_spacing(self):
        # List of figures
        figures = [chr(i) for i in range(48, 58)]

        # Concatenate all results into a single string
        result_string = "\n".join([character + "1" + character + "2" + character + "3" + character + "4" + character + "5" +     character + "6" + character + "7" + character + "8" + character + "9" + character for character in figures])

        # Display the result string in a new tab
        Font.newTab(result_string)


if __name__ == "__main__":
    SpacingPairs()
